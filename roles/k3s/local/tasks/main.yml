---

- name: Install k3s using k3sup
  local_action:
    module: shell
    cmd: >
      k3sup install
      --ip {{ apiserver_endpoint }}
      --tls-san {{ tls_san }}
      --cluster
      --user atem
      --local-path {{ ansible_user_dir }}/.kube/config
      --context k3s-ha
      --no-extras
      --k3s-extra-args "--flannel-iface=ens3 --node-ip {{ apiserver_endpoint }} --disable servicelb --disable traefik --write-kubeconfig-mode 644"
      --k3s-version v1.24.9+k3s2
      --ssh-key {{ ansible_user_dir }}/.ssh/id_rsa

- name: Configure kubectl for k3s cluster | Export KUBECONFIG
  shell: "export KUBECONFIG={{ ansible_user_dir }}/.kube/config"
  environment:
    KUBECONFIG: "{{ ansible_user_dir }}/.kube/config"
- name: Use k3s-ha context
  shell: "kubectl config use-context k3s-ha"
  environment:
    KUBECONFIG: "{{ ansible_user_dir }}/.kube/config"
- name: Test that cluster is succesfully installed | Get nodes in cluster
  shell: "kubectl get node -o wide"
  environment:
    KUBECONFIG: "{{ ansible_user_dir }}/.kube/config"
- name: Change permissions on kubeconfig
  file:
    path: "{{ ansible_user_dir }}/.kube/config"
    mode: 0644
    owner: atem
    group: atem
    state: touch

- name: Create directory for kube-vip manifest
  become: true
  file:
    path: /var/lib/rancher/k3s/server/manifests
    state: directory
    owner: atem
    group: atem


- name: Download kube-vip RBAC manifest
  become: true
  get_url:
    url: https://kube-vip.io/manifests/rbac.yaml
    dest: /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
    owner: atem
    group: atem

- name: Apply kube-vip DaemonSet manifest
  become: true
  shell:
    cmd: "kubectl --kubeconfig={{ ansible_user_dir }}/.kube/config apply -f /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml"
  args:
    executable: /bin/bash


#- name: Configure kubectl cluster to {{ endpoint_url }}
#  command: >-
#    k3s kubectl config set-cluster default
#      --server={{ endpoint_url }}
#      --kubeconfig {{ ansible_user_dir }}/.kube/config
#  changed_when: true
#  vars:
#    endpoint_url: >-
#      https://{{ apiserver_endpoint | ansible.utils.ipwrap }}:6443
